# Generated by Django 2.0.3 on 2018-04-02 23:27

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nick_name', models.CharField(default='name', max_length=50, verbose_name='昵称')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女')], default='男', max_length=20, verbose_name='性别')),
                ('address', models.CharField(default='', max_length=100)),
                ('mobile', models.CharField(blank=True, max_length=11, null=True)),
                ('Image', models.ImageField(default='image/default.jpg', upload_to='image/%Y/%m', verbose_name='图片')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('image', models.ImageField(upload_to='banner/%Y/%m', verbose_name='轮播图')),
                ('url', models.URLField(verbose_name='访问地址')),
                ('index', models.IntegerField(default=100, verbose_name='顺序')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '轮播图',
                'verbose_name_plural': '轮播图',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DocumentId', models.CharField(max_length=30, verbose_name='文件ID')),
                ('DocumentName', models.CharField(max_length=20, verbose_name='文档名')),
                ('Document', models.FileField(upload_to=users.models.user_directory_path_doc, verbose_name='文件')),
            ],
            options={
                'verbose_name': '文档',
                'verbose_name_plural': '文档',
            },
        ),
        migrations.CreateModel(
            name='EmailVerifyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='验证码')),
                ('email', models.EmailField(max_length=50, verbose_name='邮箱')),
                ('send_type', models.CharField(choices=[('register', '注册'), ('forget', '忘记密码')], max_length=20, verbose_name='传输类型')),
                ('send_time', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'verbose_name': '邮箱验证码',
                'verbose_name_plural': '邮箱验证码',
            },
        ),
        migrations.CreateModel(
            name='FeedBack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FeedBackId', models.CharField(max_length=30, verbose_name='反馈ID')),
                ('FeedBackHost', models.CharField(max_length=50, verbose_name='反馈来源')),
                ('FeedBackText', models.TextField(verbose_name='反馈文本')),
                ('AdminText', models.TextField(verbose_name='管理员回复文本')),
                ('AdminDocName', models.CharField(blank=True, max_length=20, null=True, verbose_name='文件名')),
                ('AdminDoc', models.FileField(blank=True, null=True, upload_to=users.models.user_directory_path_feedback, verbose_name='管理员回复文件')),
            ],
            options={
                'verbose_name': '反馈',
                'verbose_name_plural': '反馈',
            },
        ),
        migrations.CreateModel(
            name='Firm',
            fields=[
                ('FirmId', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='公司ID')),
                ('FirmName', models.CharField(max_length=20, verbose_name='公司名称')),
                ('FirmIntro', models.TextField(blank=True, null=True, verbose_name='公司介绍')),
                ('FirmAddr', models.CharField(max_length=50, null=True, verbose_name='公司地址')),
                ('FirmTel', models.CharField(max_length=50, null=True, verbose_name='公司电话')),
                ('FirmEmail', models.EmailField(max_length=254, verbose_name='公司邮箱')),
            ],
            options={
                'verbose_name': '公司',
                'verbose_name_plural': '公司',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('ProductTypeId', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='产品ID')),
                ('ProductTypeName', models.CharField(max_length=20, verbose_name='产品名')),
                ('ProductTypeIntro', models.TextField(blank=True, null=True, verbose_name='产品介绍')),
            ],
            options={
                'verbose_name': '产品',
                'verbose_name_plural': '产品',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=users.models.image_directory_path, verbose_name='产品图片')),
                ('add_time', models.DateTimeField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Product')),
            ],
            options={
                'verbose_name': '产品图',
                'verbose_name_plural': '产品图',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ProjectId', models.CharField(max_length=30, verbose_name='项目ID')),
                ('ProjectName', models.CharField(max_length=20, verbose_name='项目名')),
                ('ProjectIntro', models.TextField(blank=True, null=True, verbose_name='项目介绍')),
            ],
            options={
                'verbose_name': '项目',
                'verbose_name_plural': '项目',
            },
        ),
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=users.models.image_directory_path_project, verbose_name='项目图片')),
                ('add_time', models.DateTimeField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Project')),
            ],
            options={
                'verbose_name': '项目图',
                'verbose_name_plural': '项目图',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ServiceId', models.CharField(max_length=30, verbose_name='服务Id')),
                ('ServiceName', models.CharField(max_length=20, verbose_name='服务名')),
                ('ServiceIntro', models.TextField(blank=True, max_length=1000, null=True, verbose_name=True)),
            ],
            options={
                'verbose_name': '服务',
                'verbose_name_plural': '服务',
            },
        ),
        migrations.CreateModel(
            name='ServiceImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=users.models.image_directory_path_service, verbose_name='服务图片')),
                ('add_time', models.DateTimeField()),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Service')),
            ],
            options={
                'verbose_name': '服务图',
                'verbose_name_plural': '服务图',
            },
        ),
        migrations.CreateModel(
            name='UserMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.IntegerField(default=0, verbose_name='接收用户')),
                ('message', models.CharField(max_length=200, verbose_name='消息内容')),
            ],
            options={
                'verbose_name': '用户消息',
                'verbose_name_plural': '用户消息',
            },
        ),
    ]
